geom_histogram()
name = "Jackie Arends"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
times <- times[!is.na(times)] %>% as.numeric()
ggplot(tibble(times), aes(x= times)) +
geom_histogram()
raw_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
pacman::p_load(rjson, anytime, tidyverse, lubridate)
as_datetime(1352068320)
as_datetime(1352068320)
raw_unix_times
raw_datetime <- lapply(raw_unix_times, as_datetime)
raw_datetime
lapply(raw_unix_times, as_datetime) %>% unlist()
lapply(raw_unix_times, as_datetime)
lapply(raw_unix_times, as_datetime) %>% unlist()
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% unlist()
raw_datetime[0]
raw_datetime[1]
raw_datetime <- lapply(raw_unix_times, as_datetime)
lapply(raw_unix_times, as_datetime)
raw_datetime[1]
raw_datetime[[1]]
raw_datetime %>% unlist()
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c")
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .)
raw_datetime
raw_unix_times
??as_datetime
?as_datetime
times
raw_unix_times <- times[!is.na(times)] %>% as.numeric() %>% ./1000
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times / 1000
raw_datetime <- lapply(raw_unix_times/1000, as_datetime) %>% do.call("c", .)
raw_datetime
map(raw_unix_times/1000, as_datetime)
?apply
?lapply
vapply(raw_unix_times/1000, as_datetime)
sapply(raw_unix_times/1000, as_datetime)
lapply(raw_unix_times/1000, as_datetime)
sapply(raw_unix_times/1000, as_datetime, simplify = FALSE)
raw_datetime <- lapply(raw_unix_times/1000, as_datetime) %>% do.call("c", .)
raw_datetime
raw_datetime
raw_unix_times <- raw_unix_times /1000
times <- structure(raw_unix_times, class = c("POSIXct", "POSIXt"))
times
source('~/Dropbox/MPhil/Subjects/ADS/Assignments/Assignment 5/MessageTimes/dev.R', echo=TRUE)
times
times <- structure(raw_unix_times, class = c("POSIXct"))
times
raw_datetime
raw_datetime$mday
raw_datetime[1]$mday
ntimes <- as.POSIXlt(raw_datetime)    # convert to 'POSIX list type'
ntimes
ntimes$mday <- ntimes[1]$mday
ntimes$mday
ntimes[1]$mday
ggplot(tibble(times), aes(x= times)) +
geom_histogram()
ntimes <- as.POSIXct(ntimes)
ntimes
ntimes
ntimes <- as.POSIXct(ntimes)
ntimes
plot(times,val)   # old times
pacman::p_load(rjson, anytime, tidyverse, lubridate, data.table)
raw_datetime %>% as.ITime()
time_of_date <- raw_datetime %>% as.ITime()
time_of_date
time_of_date
plot(time_of_date)
hist(time_of_date)
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
clockS(raw_datetime)
hist(time_of_day_num)
time_of_day_num
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times
)
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times
)
time_of_day_word <- raw_datetime %>% as.ITime()
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times
)
data
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime
)
data
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram()
ggplot(data, aes(x= time_of_day_word)) +
geom_histogram()
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram()
as.character(1:24)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_discrete(breaks=c(1:24),
labels=c(as.character(1:24)))
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24),
labels=c(as.character(1:24)))
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))
?as.POSIXct
pb.date <- as.POSIXct(raw_datetime, tz="Australia/Darwin")
pb.date
raw_datetime
pb.date <- as.POSIXct(raw_datetime, tz="Australia/Darwin")
pb.date
pb.date <- as.POSIXct(raw_datetime, tz="EST")
pb.date
as.POSIXct(raw_datetime, tz="Australia/Darwin")
pb.date <- as.POSIXct(raw_unix_times, tz="Australia/Darwin")
pb.date
pb.date <- as.POSIXct(raw_unix_times, tz="Australia/Darwin")
pb.date <- as.POSIXct(raw_unix_times, tz="Australia/Darwin", origin = "UTC")
raw_unix_times
pb.date <- as.POSIXct(raw_datetime, tz="Australia/Darwin", origin = "UTC")
pb.date
force_tz(raw_datetime, tzone = "America/Los_Angeles")
with_tz(raw_datetime, tzone = "America/Los_Angeles")
with_tz(raw_datetime, tzone = "Australia/Darwin")
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
raw_datetime
lapply(raw_unix_times, as_datetime) %>% do.call("c", .)
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
raw_datetime
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlabel("Time of Day (Adelaide)")
ggplot(data, aes(x= time_of_day_num)) +
geom_freqpoly() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlabel("Time of Day (Adelaide)")
ggplot(data, aes(x= time_of_day_num)) +
geom_freqpoly() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram()
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date (Adelaide)")
pacman::p_load(devtools)
devtools::install_github("jimmyday12/fitzRoy")
library(fitzRoy)
pacman::p_load(tidyverse, ggplot2, lubridate)
results <- get_match_results()
fixture <- get_fixture(season = 2019)
stats <- get_afltables_stats(start_date = "2000-01-01", end_date = "2018-06-01")
dat <- update_footywire_stats()
test_data <- fixture %>% filter(Round == 12) %>%
select(Date,Home.Team, Away.Team, Venue) %>%
mutate(Date = as.Date(Date))
results
fixture <- get_fixture(season = 2019)
fixture
stats
url <- "https://mobile.twitter.com/latikambourke/lists/australian-journalists/members"
html <- try(read_html(url))
pacman::p_load(rvest, tidyverse, glue, data.table, rlist, glmnet)
html <- try(read_html(url))
url <- "https://mobile.twitter.com/latikambourke/lists/australian-journalists/members"
html <- try(read_html(url))
html <- read_html(url)
read_html("www.google.com")
read_html("https://www.google.com")
url <- "https://twitter.com/latikambourke/lists/australian-journalists/members"
html <- read_html(url)
html %>% html_nodes(".fullname")
html %>% html_nodes(".stream-item-header")
html %>% html_nodes("span+.u-textTruncate")
html %>% html_nodes("span+.u-textTruncate") %>% html_text()
filename = "message_1.json"
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
all_data
name = "Jackie Arends"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
row
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
times
raw_unix_times
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
raw_datetime
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
filename = "message.json"
pacman::p_load(rjson, anytime, tidyverse, lubridate, data.table)
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
name = "Jackie Arends"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
name = "Tobin South"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
name = "Josh Bean"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
name = "Miriam Slattery"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
name = "Tobin South"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
filename = "message_thomas.json"
pacman::p_load(rjson, anytime, tidyverse, lubridate, data.table)
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
name = "Tobin South"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
name = "Thomas Walker"
get_time_by_person <- function(row){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person)
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
time_of_day_word <- raw_datetime %>% as.ITime()
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
data = tibble(time_numb = time_of_day_num, time_string = time_of_day_word,
raw_unix_time = raw_unix_times, raw_datetime = raw_datetime)
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
ggplot(data, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
pacman::p_load(tidyverse, usethis, roxygen2, testthat,
devtools)
usethis::create_package(".")
usethis::create_package("./FacebookMessageTimes")
usethis::create_package("FacebookMessageTimes")
setwd("~/Dropbox/MPhil/Subjects/ADS/Assignments/Assignment 5/MessageTimes/FacebookMessageTimes")
times <- lapply(msgs, get_time_by_person(, name))
get_time_by_person <- function(row, name){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person(, name))
pacman::p_load(rjson, anytime, tidyverse, lubridate, data.table)
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
filename = "message_thomas.json"
filename = "../message_thomas.json"
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
name = "Thomas Walker"
filename = "../message_thomas.json"
pacman::p_load(rjson, anytime, tidyverse, lubridate, data.table)
all_data <- fromJSON(file = filename)
msgs <- all_data[[2]]
namer = "Thomas Walker"
get_time_by_person <- function(row, name){
data <- row %>% unlist()
if(data[2] == name){
return(data[3])
}else{
return(NA)
}
}
times <- lapply(msgs, get_time_by_person(, namer))
times <- lapply(msgs, get_time_by_person(., namer))
times <- lapply(msgs, get_time_by_person(), name = namer)
times <- lapply(msgs, get_time_by_person, name = namer)
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
raw_unix_times <- times[!is.na(times)] %>% as.numeric()
raw_unix_times <- raw_unix_times /1000
raw_datetime <- lapply(raw_unix_times, as_datetime) %>% do.call("c", .) %>% with_tz(., tzone = "Australia/Darwin")
clockS = function(t){hour(t)*3600+minute(t)*60+second(t)}
time_of_day_num <- clockS(raw_datetime)
time_of_day_num
ggplot(time_of_day_num, aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(tibble(time_of_day_num), aes(x= time_of_day_num)) +
geom_histogram() +
scale_x_continuous(breaks=c(1:24*60*60),
labels=c(as.character(1:24)))+
xlab("Time of Day (Adelaide)")
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
n
ggplot(data, aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
ggplot(tibble(raw_datetime), aes(x= raw_datetime)) +
geom_histogram() +
xlab("Date")
setwd("~/Dropbox/MPhil/Subjects/ADS/Assignments/Assignment 5/MessageTimes/FacebookMessageTimes")
usethis::use_vignette("Facebook Message Times")
usethis::use_vignette("FacebookMessageTimes")
setwd("~/Dropbox/MPhil/Subjects/ADS/Assignments/Assignment 5/MessageTimes")
usethis::use_vignette("FacebookMessageTimes")
devtools::load_all("FacebookMessageTimes")
usethis::use_vignette("FacebookMessageTimes")
